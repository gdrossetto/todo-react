[{"/home/gabriel/Development/todo-react/src/index.js":"1","/home/gabriel/Development/todo-react/src/App.js":"2","/home/gabriel/Development/todo-react/src/reportWebVitals.js":"3","/home/gabriel/Development/todo-react/src/components/todo-item/todo-item.js":"4","/home/gabriel/Development/todo-react/src/components/todo-list/todo-list.js":"5","/home/gabriel/Development/todo-react/src/components/new-todo.js/new-todo.js":"6"},{"size":500,"mtime":1612323782801,"results":"7","hashOfConfig":"8"},{"size":1860,"mtime":1612365003194,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1612323782801,"results":"10","hashOfConfig":"8"},{"size":805,"mtime":1612364143068,"results":"11","hashOfConfig":"8"},{"size":716,"mtime":1612364393699,"results":"12","hashOfConfig":"8"},{"size":693,"mtime":1612365020202,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"11r7nqw",{"filePath":"17","messages":"18","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/gabriel/Development/todo-react/src/index.js",[],["28","29"],"/home/gabriel/Development/todo-react/src/App.js",["30","31","32","33","34"],"/home/gabriel/Development/todo-react/src/reportWebVitals.js",[],"/home/gabriel/Development/todo-react/src/components/todo-item/todo-item.js",[],"/home/gabriel/Development/todo-react/src/components/todo-list/todo-list.js",["35","36"],"import React, { useEffect, useState } from \"react\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport TodoItem from \"../todo-item/todo-item\";\n\nconst TodoList = ({ items, alteraStatus }) => {\n  return (\n    <Droppable droppableId=\"todos\">\n      {(provided) => (\n        <ol\n          className=\"todo-list\"\n          {...provided.droppableProps}\n          ref={provided.innerRef}\n        >\n          {items.map((item, index) => (\n            <TodoItem\n              key={item.id}\n              item={item}\n              index={index}\n              alteraStatus={alteraStatus}\n            />\n          ))}\n          {provided.placeholder}\n        </ol>\n      )}\n    </Droppable>\n  );\n};\n\nexport default TodoList;\n","/home/gabriel/Development/todo-react/src/components/new-todo.js/new-todo.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":17,"nodeType":"43","messageId":"44","endLine":1,"endColumn":26},{"ruleId":"41","severity":1,"message":"45","line":3,"column":27,"nodeType":"43","messageId":"44","endLine":3,"endColumn":36},{"ruleId":"41","severity":1,"message":"46","line":3,"column":38,"nodeType":"43","messageId":"44","endLine":3,"endColumn":47},{"ruleId":"41","severity":1,"message":"47","line":4,"column":8,"nodeType":"43","messageId":"44","endLine":4,"endColumn":16},{"ruleId":"48","severity":1,"message":"49","line":33,"column":22,"nodeType":"50","messageId":"51","endLine":33,"endColumn":24},{"ruleId":"41","severity":1,"message":"42","line":1,"column":17,"nodeType":"43","messageId":"44","endLine":1,"endColumn":26},{"ruleId":"41","severity":1,"message":"52","line":1,"column":28,"nodeType":"43","messageId":"44","endLine":1,"endColumn":36},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Draggable' is defined but never used.","'Droppable' is defined but never used.","'TodoItem' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]