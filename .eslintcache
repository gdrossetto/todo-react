[{"/home/gabriel/Development/todo-react/src/index.js":"1","/home/gabriel/Development/todo-react/src/App.js":"2","/home/gabriel/Development/todo-react/src/reportWebVitals.js":"3","/home/gabriel/Development/todo-react/src/components/todo-item/todo-item.js":"4","/home/gabriel/Development/todo-react/src/components/todo-list/todo-list.js":"5","/home/gabriel/Development/todo-react/src/components/new-todo.js/new-todo.js":"6"},{"size":500,"mtime":1612323782801,"results":"7","hashOfConfig":"8"},{"size":1860,"mtime":1612365003194,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1612323782801,"results":"10","hashOfConfig":"8"},{"size":805,"mtime":1612364143068,"results":"11","hashOfConfig":"8"},{"size":716,"mtime":1612364393699,"results":"12","hashOfConfig":"8"},{"size":693,"mtime":1612365020202,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"11r7nqw",{"filePath":"17","messages":"18","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/gabriel/Development/todo-react/src/index.js",[],["29","30"],"/home/gabriel/Development/todo-react/src/App.js",["31","32","33","34","35"],"import React, { useEffect, useState } from \"react\";\nimport \"./App.scss\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport TodoItem from \"./components/todo-item/todo-item\";\nimport TodoList from \"./components/todo-list/todo-list\";\nimport NewTodo from \"./components/new-todo.js/new-todo\";\n\nconst App = (props) => {\n  const [items, setItems] = useState([\n    { id: 1, text: \"Learn JavaScript\", done: false },\n    { id: 2, text: \"Learn React\", done: false },\n    { id: 3, text: \"Play around in JSFiddle\", done: false },\n    { id: 4, text: \"Build something awesome\", done: false },\n  ]);\n\n  const [newTodo, setNewTodo] = useState(\"\");\n\n  function alteraStatusTodo(id, checked) {\n    let auxArray = items.map((item) => {\n      if (item.id === id) {\n        const updatedItem = {\n          ...item,\n          done: checked,\n        };\n        return updatedItem;\n      }\n      return item;\n    });\n    setItems(auxArray);\n  }\n\n  function addTodo(text) {\n    if (text && text != \"\") {\n      let auxArray = items.concat({\n        id: items.length + 1,\n        text: text,\n        done: false,\n      });\n\n      setItems(auxArray);\n      setNewTodo(\"\");\n    }\n  }\n\n  function handleDrag(result) {\n    if (!result.destination) return;\n\n    let auxArray = Array.from(items);\n    const [reorderedItem] = auxArray.splice(result.source.index, 1);\n    auxArray.splice(result.destination.index, 0, reorderedItem);\n\n    setItems(auxArray);\n  }\n\n  return (\n    <div className=\"todo-bg\">\n      <div className=\"todo-container\">\n        <h1 className=\"mb-4\">To-do List</h1>\n        <NewTodo onType={setNewTodo} addTodo={addTodo} todoText={newTodo} />\n        <DragDropContext onDragEnd={handleDrag}>\n          <TodoList items={items} alteraStatus={alteraStatusTodo} />\n        </DragDropContext>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","/home/gabriel/Development/todo-react/src/reportWebVitals.js",[],"/home/gabriel/Development/todo-react/src/components/todo-item/todo-item.js",[],"/home/gabriel/Development/todo-react/src/components/todo-list/todo-list.js",["36","37"],"import React, { useEffect, useState } from \"react\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport TodoItem from \"../todo-item/todo-item\";\n\nconst TodoList = ({ items, alteraStatus }) => {\n  return (\n    <Droppable droppableId=\"todos\">\n      {(provided) => (\n        <ol\n          className=\"todo-list\"\n          {...provided.droppableProps}\n          ref={provided.innerRef}\n        >\n          {items.map((item, index) => (\n            <TodoItem\n              key={item.id}\n              item={item}\n              index={index}\n              alteraStatus={alteraStatus}\n            />\n          ))}\n          {provided.placeholder}\n        </ol>\n      )}\n    </Droppable>\n  );\n};\n\nexport default TodoList;\n","/home/gabriel/Development/todo-react/src/components/new-todo.js/new-todo.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":1,"column":17,"nodeType":"44","messageId":"45","endLine":1,"endColumn":26},{"ruleId":"42","severity":1,"message":"46","line":3,"column":27,"nodeType":"44","messageId":"45","endLine":3,"endColumn":36},{"ruleId":"42","severity":1,"message":"47","line":3,"column":38,"nodeType":"44","messageId":"45","endLine":3,"endColumn":47},{"ruleId":"42","severity":1,"message":"48","line":4,"column":8,"nodeType":"44","messageId":"45","endLine":4,"endColumn":16},{"ruleId":"49","severity":1,"message":"50","line":33,"column":22,"nodeType":"51","messageId":"52","endLine":33,"endColumn":24},{"ruleId":"42","severity":1,"message":"43","line":1,"column":17,"nodeType":"44","messageId":"45","endLine":1,"endColumn":26},{"ruleId":"42","severity":1,"message":"53","line":1,"column":28,"nodeType":"44","messageId":"45","endLine":1,"endColumn":36},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Draggable' is defined but never used.","'Droppable' is defined but never used.","'TodoItem' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]